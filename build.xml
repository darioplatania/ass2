<?xml version="1.0" encoding="UTF-8"?>

<project basedir="." default="buildClient" name="NFV-2">
	<description>
			Script for NFV Assignment 2
	</description>

	<!-- The "NfvReaderFactory" used for NfvInfo and as data generator for tests -->
	<property name="NfvInfo.NfvReaderFactory" value="it.polito.dp2.NFV.Random.NfvReaderFactoryImpl" />

	<!-- The "ReachabilityTesterFactory" of the solution -->
	<property name="SolutionReachabilityTesterFactory" value="it.polito.dp2.NFV.sol2.ReachabilityTesterFactory" />

	<!-- The default test case -->
	<property name="testcase" value="0" />
	<!-- The default test class -->
	<property name="test.class" value="it.polito.dp2.NFV.lab2.tests.NFVTests" />

    <!-- The location of the ... web service -->
	<property name="PORT" value="8080"/>
	<property name="URL" value="http://localhost:${PORT}/Neo4JSimpleXML/webapi"/>
	<property name="WADL" value="${URL}/application.wadl"/>

	<property name="lab2.location" location="." />

	<property name="src.dir" location="${lab2.location}/src" />
	<property name="build.dir" location="${lab2.location}/build" />
	<property name="lib.dir" location="${lab2.location}/lib" />
	<property name="gen.dir" location="${lab2.location}/gen-src" />
	
	<property name="shared.location" location="/opt/dp2/shared"/>
	<property name="ext.lib.dir" location="${shared.location}/lib" />
	
	<property name="debug" value="true" />
	<property name="debuglevel" value="source,lines,vars" />
	<property name="target" value="1.8" />
	<property name="source" value="1.8" />
	
	<!-- The classpath to be used for compilation of the solution -->
	<path id="sol.classpath">
		<pathelement location="${lib.dir}/NFV.jar"/>
		<pathelement location="${lib.dir}/lab2.jar"/>
		<pathelement location="${ext.lib.dir}/javax.ws.rs-api-2.0.1.jar"/>
		<pathelement location="${ext.lib.dir}/jersey-client-1.19.1.jar"/>
		<pathelement location="${ext.lib.dir}/jersey-core-1.19.1.jar"/>
	</path>

	<!-- The classpath that includes only the NFV.jar -->
	<path id="NFV.classpath">
		<pathelement location="${lib.dir}/NFV.jar"/>
	</path>
	
	<!-- Ant Script for controlling Tomcat-->
	<property name="service.name" value="Neo4JSimpleXML"/>
	<property name="root.location" value="${lab2.location}"/>
	<import file="tomcat-build.xml"/>
	
	<!-- Ant Script for controlling Neo4j-->
	<import file="neo4j-build.xml"/>
	
	
	<!-- The classpath to be used for running the tests -->
	<path id="test.classpath">
		<pathelement location="${build.dir}" />
		<fileset dir="${lib.dir}">
		    <include name="*.jar" />
		</fileset>
		<fileset dir="${ext.lib.dir}">
		    <include name="*.jar" />
			<exclude name="ant-*.jar"/>
		</fileset>
	</path>
	
	<!-- Target setseed	-->
	<target name="setseed" unless="seed">
		<tstamp>
			<format property="seed" pattern="1HHmmss" />
		</tstamp>
	</target>
	
	<!-- Target init	-->
	<target name="init">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${gen.dir}" />
	</target>
	
	<target name="buildNFVInfo" depends="init">
		<echo>Building NFVInfo (if needed)...</echo>
		<javac 
			destdir="${build.dir}"
			debug="${debug}"
			debuglevel="${debuglevel}"
			source="${source}"
			target="${target}"
			includeantruntime="false">
				<src path="${src.dir}" />
				<include name="it/polito/dp2/NFV/lab1/NfvInfo.java" />
				<classpath>
					<path refid="NFV.classpath" />
				</classpath>
		</javac>
		<echo>Done.</echo>
	</target>

	<target name="NFVInfo" depends="buildNFVInfo, setseed" description="Run NFVInfo">
		<java classname="it.polito.dp2.NFV.lab1.NfvInfo" failonerror="true" fork="yes">
			<sysproperty key="it.polito.dp2.NFV.Random.seed" value="${seed}"/>
			<sysproperty key="it.polito.dp2.NFV.Random.testcase" value="${testcase}"/>
			<sysproperty key="it.polito.dp2.NFV.NfvReaderFactory" value="${NfvInfo.NfvReaderFactory}"/>
			<classpath>
				<path refid="NFV.classpath" />
				<pathelement location="${lib.dir}/NFVRandom.jar"/>
				<pathelement path="${build.dir}"/>
			</classpath>
		</java>
	</target>
	
	<!-- Target buildClient -->
	<target name="buildClient" depends="init" description="Build your solution">
		<echo>Building the submitted solution (if needed)...</echo>
		<ant antfile="sol-build.xml" target="generate-artifacts"></ant>
		<javac destdir="${build.dir}" debug="${debug}" debuglevel="${debuglevel}" source="${source}" target="${target}" includeantruntime="false">
			<src path="${src.dir}"/>
			<src path="${gen.dir}"/>
			<include name="it/polito/dp2/NFV/sol2/**" />
			<classpath>
				<path refid="sol.classpath" />
			</classpath>
		</javac>
		<echo>Done.</echo>
	</target>

	<!-- Target runFuncTest	-->
	<target name="runFuncTest" depends="setseed" description="Run Functional tests">
		<antcall target="runFuncTest.real">
			<param name="test.class" value="${test.class}" />
			<param name="exit.code" value="126" />
		</antcall>
	</target>

	<!-- Target runTest.real	-->
	<target name="runFuncTest.real" depends="buildClient, setseed">
		<junit printsummary="on" dir="." fork="yes" haltonfailure="no" showoutput="no" filtertrace="true" timeout="120000">
			<jvmarg value="-Djava.awt.headless=true" />
			<sysproperty key="it.polito.dp2.NFV.NfvReaderFactory" value="${NFVInfo.NfvReaderFactory}" />
			<sysproperty key="it.polito.dp2.NFV.Random.testcase" value="${testcase}"/>
			<sysproperty key="it.polito.dp2.NFV.Random.seed" value="${seed}"/>
			<sysproperty key="it.polito.dp2.NFV.lab2.ReachabilityTesterFactory" value="${SolutionReachabilityTesterFactory}" />
			<sysproperty key="it.polito.dp2.NFV.lab2.URL" value="${URL}"/>
			<formatter type="brief" usefile="false"/>
			<test haltonfailure="no" failureproperty="test_failed" name="${test.class}"/>
			<classpath>
				<path refid="test.classpath" />
			</classpath>
		</junit>
		<fail if="test_failed" status="${exit.code}" message="*** Some Tests FAILED ***"/>
		<echo>*** All Tests PASSED  ***</echo>
	</target>

	<!-- Target clean	-->
	<target name="clean" description="Clean generated files and class files">
		<delete dir="${build.dir}" />
		<delete dir="${gen.dir}" />
	</target>
	
	<!--target for building the final zip containing the solution -->
	<target name="make-zip" description="Make zip to be submitted">
		<zip destfile="lab2.zip"
			basedir="${lab2.location}"
		    includes="custom/* src/it/polito/dp2/NFV/sol2/**/*.java sol-build.xml"
		/>
	</target>

</project>
